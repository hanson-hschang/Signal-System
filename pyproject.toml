[build-system]
requires = [
    "setuptools>=45",
    "wheel",
    "setuptools_scm>=6.2",
]
build-backend = "setuptools.build_meta"

[project]
name = "Signal-System"
version = "0.1.0"
description = "A package for signal and system simulation, design, analysis, and learning"
readme = "README.md"
requires-python = ">=3.11,<3.12"
license = {text = "MIT"}
authors = [
    {name = "Heng-Sheng Chang"}
]
keywords = ["Signal", "System", "Learning"]

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "numpy>=1.26.0",
    "scipy>=1.11.0",
    "numba>=0.60.0",
    "torch>=2.0.0",
    "matplotlib>=3.7.2",
    "h5py>=3.0.0",
    "tqdm>=4.60.0",
    "click>=8.1.7",
]

[project.optional-dependencies]
dev = [
    "pyupgrade>=3.15.2",
    "pre-commit>=3.7.1",
    "pytest>=8.2.1",
    "pytest-mock>=3.14.0",
    "pytest-cov>=5.0.0",
    "codecov>=2.1.13",
    "black>=24.4.2",
    "isort[colors]>=5.13.2",
    "mypy>=1.10.0",
    "mypy-extensions>=1.0.0",
    "pip-tools>=7.4.0",
]

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["ss"]

[tool.black]
# https://github.com/psf/black
target-version = ["py311"]
line-length = 79
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
line_length = 79  # https://peps.python.org/pep-0008/
known_typing = [
    "typing",
    "types",
    "typing_extensions",
    "mypy",
    "mypy_extensions",
]
sections = [
    "FUTURE",
    "TYPING",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER",
]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = "3.11"
pretty = true
show_traceback = true
color_output = true
strict = true
allow_redefinition = false
check_untyped_defs = false
disallow_subclassing_any = false
disallow_untyped_calls = false
disallow_any_generics = false
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = true
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = false
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
norecursedirs = [
    "hooks",
    "*.egg",
    ".eggs",
    "dist",
    "build",
    "docs",
    ".tox",
    ".git",
    "__pycache__",
]
doctest_optionflags = [
    "NUMBER",
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
    "ELLIPSIS",
]
addopts = [
    "--strict-markers",
    "--tb=short",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover", # Enable pragma
    "TODO",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == __main__:",
    "def __repr__",
    "def plot_.*\\b",
    "if self.debug:",
    "if settings.DEBUG",
    "if TYPE_CHECKING:",
    "raise AssertionError",
    "raise NotImplementedError",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "\\.\\.\\."
]
fail_under = 30
show_missing = true

[tool.coverage.run]
branch = true
omit = [
    "*/.local/*",
    "setup.py",
]
